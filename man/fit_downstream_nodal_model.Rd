% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_downstream_nodal_model.R
\name{fit_downstream_nodal_model}
\alias{fit_downstream_nodal_model}
\title{A function to run a downstream analysis on a network fit with combined stochastic block and social relations models using the STRAND framework}
\usage{
fit_downstream_nodal_model(
  fit,
  data,
  outcome,
  exposure = NULL,
  mask = NULL,
  downstream_regression,
  nodal_effects = "out",
  standardized = TRUE,
  outcome_mode = "gaussian",
  link_mode = "identity",
  mode = "mcmc",
  stan_mcmc_parameters = list(seed = 1, chains = 1, parallel_chains = 1, refresh = 1,
    iter_warmup = NULL, iter_sampling = NULL, max_treedepth = NULL, adapt_delta = NULL,
    init = NULL),
  priors = NULL
)
}
\arguments{
\item{fit}{A model fit with STRAND using the fit_block_plus_social_relations_model() function. This generates a latent network, from which node-level random effects are extracted. The effects estimated here (and used to predict downstream variables) are the nodal random effects remaining *after* accounting for all covariates in the model.}

\item{data}{The data object of class STRAND, prepared using the make_strand_data() function, and used in the fit object above. The data object must include all covariates (and outcomes) used in the formulas listed below.}

\item{outcome}{A string giving the name of the individual-level variable to be predicted. This must be valid variable from the individual-level slot of the data object.}

\item{exposure}{If the outcome is binomial, this is the exposure or sample size for each observation.}

\item{mask}{An indicator if the outcome was masked/censored. If mask[i]==1, then the Stan model skips over modeling the outcome for element i.}

\item{downstream_regression}{A formula for the predictors of the downstream outcomes (i.e., effects of individual covariates). This should be specified as in lm(), e.g.: ~ Age * Education. This should include all desired predictors except the nodal random effects from the fit object above.}

\item{nodal_effects}{A string: 'out', 'in', 'both', or 'none'. This determines which nodal predictors get used in the regression predicting the downstream outcome.}

\item{standardized}{A Boolean, should the random effects from the fit object be standardized unit normals? If TRUE, then the raw random effects are not scaled using the SD parameter.}

\item{outcome_mode}{A string:  'bernoulli', 'binomial', 'poisson', 'gaussian', 'beta', 'gamma', 'negative_binomial'. The outcome type for the model.}

\item{link_mode}{A string: 'logit', 'probit', 'log', or 'identity'. Must correspond to the outcome mode.}

\item{mode}{A string giving the mode that stan should use to fit the model. "mcmc" is default and recommended, and STRAND has functions to make processing the mcmc samples easier. Other options are "optim", to
use the optimizer provided by Stan, and "vb" to run the variational inference routine provided by Stan. "optim" and "vb" are fast and can be used for test runs. To process their output, however,
users must be familar with [cmdstanr](https://mc-stan.org/users/interfaces/cmdstan). We recommmend that users refer to the [Stan user manual](https://mc-stan.org/users/documentation/) for more information about the different modes that Stan can use.}

\item{stan_mcmc_parameters}{A list of Stan parameters that often need to be tuned. Defaults set to: list(seed = 1, chains = 1, parallel_chains = 1, refresh = 1, iter_warmup = NULL, iter_sampling = NULL, max_treedepth = NULL, adapt_delta = NULL)
We recommend 1000 sampling and warmup iterations on a single chain for exploratory model fitting. For final runs, we recommend running 2 to 4 chains for twice as long. Be sure to check r_hat, effective sample size, and traceplots.}

\item{priors}{A labeled list of priors for the model. User are only permitted to edit the values. Distributions are fixed.}
}
\value{
A STRAND model object containing the data used, and the Stan results.
}
\description{
A function to run a downstream analysis on a network fit with combined stochastic block and social relations models using the STRAND framework
}
\examples{
\dontrun{
fit = fit_downstream_nodal_model(
   fit = fit1, 
   data = model_dat,
   outcome = "RS",
   downstream_regression = ~ Age + Mass,
   nodal_effects = "both",
   standardized = TRUE,
   outcome_mode = "gamma",
   link_mode = "log",
   mode = "mcmc",
   stan_mcmc_parameters = list(
     chains = 1,
     iter_warmup = 1500 ,
     iter_sampling = 1500 ,
     max_treedepth = 13,
     refresh = 1,
     adapt_delta = 0.98)
 )
}

}
