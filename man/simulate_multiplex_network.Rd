% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_multiplex_network.R
\name{simulate_multiplex_network}
\alias{simulate_multiplex_network}
\title{A function to simulate multilayer directed networks using a combined stochastic block and social relations model}
\usage{
simulate_multiplex_network(
  N_id = 99,
  N_layers = 3,
  B = NULL,
  V = 3,
  groups = NULL,
  sr_mu = c(0, 0),
  sr_sigma,
  sr_Rho,
  dr_mu,
  dr_sigma,
  dr_Rho,
  error_sigma = 0.01,
  outcome_mode = "bernoulli",
  link_mode = "logit",
  individual_predictors = NULL,
  dyadic_predictors = NULL,
  individual_effects = NULL,
  dyadic_effects = NULL
)
}
\arguments{
\item{N_id}{Number of individuals.}

\item{N_layers}{Number of network layers}

\item{B}{List of List of matrices that hold intercept and offset terms. Log-odds. The first matrix should be  1 x 1 with the value being the intercept term. The first list is over layers. The second is over block variables.}

\item{V}{Number of blocking variables in each B.}

\item{groups}{Dataframe of the block IDs of each individual for each variable in B.}

\item{sr_mu}{Mean A vector for sender and receivier random effects. In most cases, this should be a vector of 0s 2*N_layers long.}

\item{sr_sigma}{A standard deviation vector for sender and receivier random effects. The first N_layers elements control node-level variation in out-degree, the second N_layers elements control in-degree.}

\item{sr_Rho}{Correlation of sender-receiver effects (i.e., generalized reciprocity). Needs to be a valid correlation matrix, 2*N_layers by 2*N_layers.}

\item{dr_mu}{Mean A vector for dyadic random effects. In most cases, this should be a vector of 0s N_layers long.}

\item{dr_sigma}{Standard deviation for dyadic random effects. This should be a vector N_layers long.}

\item{dr_Rho}{Correlation of dyad effects (i.e., dyadic reciprocity). Needs to be a valid correlation matrix, 2*N_layers by 2*N_layers.}

\item{error_sigma}{Standard deviation for measurement error in Gaussian models.}

\item{outcome_mode}{Outcome mode: can be "bernoulli", "poisson", "binomial", or "gaussian".}

\item{link_mode}{Link mode: can be "logit", "probit", "log", or "identity". For poisson, you must use log. For Gaussian you must use identity.}

\item{individual_predictors}{An N_id by N_individual_parameters matrix of covariates.}

\item{dyadic_predictors}{An N_id by N_id by N_dyadic_parameters array of covariates.}

\item{individual_effects}{A list of 2 by N_individual_parameters matrix of slopes. The list runs over layers. In each element, the first row gives effects of focal characteristics (on out-degree). 
The second row gives effects of target characteristics (on in-degree).}

\item{dyadic_effects}{A list of N_dyadic_parameters vectors of slopes.}
}
\value{
A list of objects including: network (an adjacency tensor of binary outcomes), tie_strength (an adjacency tensor with probability weights), 
group_ids (a vector of length N_id, giving the group of each individual), individual_predictors (the supplied covariate data is saved along with the network data), 
and dyadic_predictors (the supplied covariate data is saved along with the network data).
}
\description{
This is a function to simulate multilayer network data with a stochastic block structure, sender-receiver effects, and dyadic reciprocity. This function
is essentially the union of a social relations model and a stochastic block model.
}
